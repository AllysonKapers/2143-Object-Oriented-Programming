<html>
<head><title>Chapter 3, Slide 41</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 3: Object-Oriented Design:
<td bgcolor=#FCCF97><a href="outline.htm">next</a>
<td bgcolor=#FCCF97><a href="slide40.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide41.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap02/slide41.ram">real</a>
<td bgcolor=#FCCF97><a href="text41.htm" target=text>text</a>
</table>
<br>
<h1>Common Design Flaws</h1>
<font size=+2>
<P>
The following categories present some of the more common design flaws:
<P><B>Direct modification</B>
Components that make direct modification of data values in other components
are a direct violation of encapsulation.
<P>
Such coupling makes for inflexible designs.
<P><B>Too Much Responsibility</B>
Components with too much responsibility are difficult to understand and to use.
<P>
Responsibility should be broken into smaller meaningful packages and 
distributed.
<P><B>No Responsibility</B>
Components with no responsibility serve no purpose.
<P>
Often arise when designers equate physical existence with logical design
existence.
<P>``Money is no object''
<P><B>Components with unused responsibility</B>
<P>
Usually the result of designing software components without thinking
about how they will be used.
<P><B>Misleading Names</B>
<P>
Names should be short and unambiguously indicate what the responsibilities
of the component involve.
<P>
<BR>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 3</a>, Slide 41</h6>
<hr>
This slide completes the material from Chapter three.
</body>
</html>


