<html>
<head><title>Chapter 9, Slide 07</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 9: A Solitare Game:
<td bgcolor=#FCCF97><a href="slide08.htm">next</a>
<td bgcolor=#FCCF97><a href="slide06.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide07.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap09/slide07.ram">real</a>
<td bgcolor=#FCCF97><a href="text07.htm" target=text>text</a>
</table>
<p>
<h1>Card Piles</h1>
<font size=+2>
Note that most of the game consists of different types of card piles.
<ul>
<li>We abstract the common behavior and place it into a parent class
(for example, managing the pile of cards).
<p><li>We use overriding to specialize the behavior that is specific
to each class.
(for example, what it means when the pile is selected).
<p><li>Since some piles share behavior that in other piles is overridden,
the parent class can provide a default behavior that can sometimes
be changed (for example, drawing).
</ul>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 9</a>, Slide 07</h6>
<hr>
</body>
</html>
