<html>
<head><title>Chapter 20, Slide 02</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 20: The STL :
<td bgcolor=#FCCF97><a href="slide03.htm">next</a>
<td bgcolor=#FCCF97><a href="slide01.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide02.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap20/slide02.ram">real</a>
<td bgcolor=#FCCF97><a href="text02.htm" target=text>text</a>
</table>
<p>
<h1>Generic Algorithms versus Encapsulation</h1>
<font size=+2>
<P>
Object-Oriented programming holds <EM>encapsulation</EM> as an ideal, bundling
all actions in one place.  Can make for ``fat'' classes.
<P>
The STL separates data structures and algorithms.  The data structures 
are relatively small.  The algorithms are many.  Can be mixed and matched.
<P>
Allows for a much smaller class library.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 20</a>, Slide 02</h6>
<hr>
</body>
</html>
