<html>
<head><title>Chapter 5, Slide 04</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 5: Messages Instances and Initialization:
<td bgcolor=#FCCF97><a href="slide05.htm">next</a>
<td bgcolor=#FCCF97><a href="slide03.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide04.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap05/slide04.ram">real</a>
<td bgcolor=#FCCF97><a href="text04.htm" target=text>text</a>
</table>
<p>
<h1>Statically Typed and Dynamically Typed Languages</h1>
<font size=+2>
A distinction we will see throughout the term is between the following:
<ul>
<li>A statically typed language requires the programmer to declare 
a type for each variable.  The validity of a message passing expression
will be checked at compile time, based on the declared type of the
receiver.
<p><li>A dynamically typed language associates types with values, 
not with variables.  A variable is just a name.
The legality of a message cannot be determined until run-time.
</ul>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 5</a>, Slide 04</h6>
<hr>
(There do exist statically typed languages that do not require the programmer
to write declaration statements, but no commonly used OO languages use
this approach.)
</body>
</html>
