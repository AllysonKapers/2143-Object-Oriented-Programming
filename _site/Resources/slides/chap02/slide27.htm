<html>
<head><title>Chapter 2, Slide 27</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 2: Abstraction :
<td bgcolor=#FCCF97><a href="slide28.htm">next</a>
<td bgcolor=#FCCF97><a href="slide26.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide27.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap02/slide27.ram">real</a>
<td bgcolor=#FCCF97><a href="text27.htm" target=text>text</a>
</table>
<p>
<h1>Abstract Data Types</h1>
<font size=+2>
<p>
An <i>Abstract Data Type</i> is a programmer-defined data type that can be
manipulated in a manner similar to system-provided data types
<ul>
<p><li>Must have the ability to instantiate many different copies of the data type.
<p><li>Data type can be manipulated using provided operations, 
without knowledge of internal representation.
</ul>
But ADTs were important not because they were data structures, but because
they provided an easily characterized service to the rest of an application.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 2</a>, Slide 27</h6>
<hr>
</body>
</html>
