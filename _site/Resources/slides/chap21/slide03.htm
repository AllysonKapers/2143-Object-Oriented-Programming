<html>
<head><title>Chapter 21, Slide 03</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 21: Software Frameworks :
<td bgcolor=#FCCF97><a href="slide04.htm">next</a>
<td bgcolor=#FCCF97><a href="slide02.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide03.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap21/slide03.ram">real</a>
<td bgcolor=#FCCF97><a href="text03.htm" target=text>text</a>
</table>
<p>
<h1>Reuse of Code, Reuse of Concept</h1>
<font size=+2>
The solution comes from the two ways we have been using inheritance from
the beginning of the book.
<ul>
<li>Reuse of code.  Certain methods, call foundation methods, are defined 
in a general purpose class.
These provide functionality that is common to many applications.
<p><li>Reuse of concept.  Other methods, called specialization methods, are 
defined in a parent class, but overridden in child classes.
These provide the means to specialize an application to a new situation.
</ul>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 21</a>, Slide 03</h6>
<hr>
</body>
</html>
