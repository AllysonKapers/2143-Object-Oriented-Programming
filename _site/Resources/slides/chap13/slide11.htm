<html>
<head><title>Chapter 13, Slide 11</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 13: Multiple Inheritance:
<td bgcolor=#FCCF97><a href="slide12.htm">next</a>
<td bgcolor=#FCCF97><a href="slide10.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide11.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap13/slide11.ram">real</a>
<td bgcolor=#FCCF97><a href="text11.htm" target=text>text</a>
</table>
<p>
<h1>Other Approaches to Name Ambiguity</h1>
<font size=+2>
Other languages use different approaches to solving the problem
of ambiguous names
<ul>
<li>Eiffel uses the ability to rename features from the parent class.
A polymorphic variable accessing through the parents name will access
the renamed feature in the child.
<p><li>CLOS and Python resolve ambiguous names by the order in which the 
parent classes are listed.  The first occurrence of the name found in
a systematic search is the one selected.
</ul>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 13</a>, Slide 11</h6>
<hr>
</body>
</html>
