<html>
<head><title>Chapter 13, Slide 14</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 13: Multiple Inheritance:
<td bgcolor=#FCCF97><a href="slide15.htm">next</a>
<td bgcolor=#FCCF97><a href="slide13.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide14.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap13/slide14.ram">real</a>
<td bgcolor=#FCCF97><a href="text14.htm" target=text>text</a>
</table>
<p>
<h1>Data Field in Common Ancestor</h1>
<font size=+2>
Imagine that the common ancestor declares a data member.  Should the
child class have one copy of this data field, or two?
<p>
Both answers can be justified with examples.
<p>
C++ gets around this by introducing the idea of a <b>virtual</b> parent class.
If your parent is virtual there is one copy, and if not there is two.
<p>
Not a perfect solution, and makes the language complicated.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 13</a>, Slide 14</h6>
<hr>
</body>
</html>
