<html>
<head><title>Chapter 25, Slide 11</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 25: Reflection and Introspection :
<td bgcolor=#FCCF97><a href="slide12.htm">next</a>
<td bgcolor=#FCCF97><a href="slide10.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide11.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap25/slide11.ram">real</a>
<td bgcolor=#FCCF97><a href="text11.htm" target=text>text</a>
</table>
<p>
<h1>Rational for Metaclasses</h1>
<font size=+2>
Remember that by
introducing new classes that represent classes, Smalltalk was able to
solve the following problem
<ul>
<li>How do you give unique behavior to just one instance of a class?
<p>(For example, the behavior to initialize newly created instances of
a class).
</ul>
The answer was, you don't.  You add a new child class that defines
the behavior you want, and put this between the object and the true parent.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 25</a>, Slide 11</h6>
<hr>
</body>
</html>
