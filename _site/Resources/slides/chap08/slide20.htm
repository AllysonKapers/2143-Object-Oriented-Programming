<html>
<head><title>Chapter 8, Slide 20</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 8: Inheritance and Substitution:
<td bgcolor=#FCCF97><a href="slide21.htm">next</a>
<td bgcolor=#FCCF97><a href="slide19.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide20.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap08/slide20.ram">real</a>
<td bgcolor=#FCCF97><a href="text20.htm" target=text>text</a>
</table>
<p>
<h1>Inheritance for Limitation</h1>
<font size=+2>
If a child class overrides a method inherited from the parent in a way
that makes it unusable (for example, issues an error message), then
we call it inheritance for limitation.
<p>
For example, you have an existing <b>List</b> data type that allows items
to be inserted at either end, and you override methods allowing insertion
at one end in order to create a <b>Stack</b>.
<p>
Generally not a good idea, since it breaks the idea of substitution.
But again, it is sometimes found in practice.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 8</a>, Slide 20</h6>
<hr>
</body>
</html>
