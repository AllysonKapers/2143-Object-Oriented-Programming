<html>
<head><title>Chapter 14, Slide 03</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 14: Polymorphism and Software Reuse:
<td bgcolor=#FCCF97><a href="slide04.htm">next</a>
<td bgcolor=#FCCF97><a href="slide02.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide03.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap14/slide03.ram">real</a>
<td bgcolor=#FCCF97><a href="text03.htm" target=text>text</a>
</table>
<p>
<h1>Major Forms of Polymorphism in Object Oriented Languages</h1>
<font size=+2>
There are four major forms of polymorphism in object-oriented languages:
<ul>
<li>Overloading (ad hoc polymorphism) -- one name that refers to 
two or more different implementations. 
<p><li>Overriding (inclusion polymorphism) -- A child class 
redefining a method inherited from a
parent class.
<p><li>The Polymorphic Variable (assignment polymorphism) -- A 
variable that can hold different 
types of values during the course of execution.  It is called Pure Polymorphism
when a polymorphic variable is used as a parameter.
<p><li>Generics (or Templates) -- A way of creating general tools or classes
by parameterizing on types.
</ul>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 14</a>, Slide 03</h6>
<hr>
</body>
</html>
