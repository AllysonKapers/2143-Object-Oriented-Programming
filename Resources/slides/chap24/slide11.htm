<html>
<head><title>Chapter 24, Slide 11</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 24: Design Patterns :
<td bgcolor=#FCCF97><a href="slide12.htm">next</a>
<td bgcolor=#FCCF97><a href="slide10.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide11.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap24/slide11.ram">real</a>
<td bgcolor=#FCCF97><a href="text11.htm" target=text>text</a>
</table>
<p>
<h1>Singleton</h1>
<font size=+2>
<b>Problem:</b> You want to ensure that there is never more than one instace
of a given class.
<p><b>Solution:</b> Make the constructor private, have a method that
returns just one instance, which is held inside the class itself.
<pre>
class SingletonClass {
public:
	static SingletonClass * oneAndOnly () { return theOne; }
private:
	static SingletonClass * theOne;
	SingletonClass () { ... }
};

	// static initialization
SingletonClass * SingletonClass::theOne = new SingletonClass();
</pre>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 24</a>, Slide 11</h6>
<hr>
</body>
</html>
