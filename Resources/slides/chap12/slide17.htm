<html>
<head><title>Chapter 12, Slide 17</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 12: Implications of substitution:
<td bgcolor=#FCCF97><a href="slide18.htm">next</a>
<td bgcolor=#FCCF97><a href="slide16.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide17.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap12/slide17.ram">real</a>
<td bgcolor=#FCCF97><a href="text17.htm" target=text>text</a>
</table>
<p>
<h1>Equality and Identity</h1>
<font size=+2>
<ul>
<li>A test for <b>identity</b> asks whether two variables refer to exactly
the same object.
<p><li>A test for <b>equality</b> asks whether two variables refer to
values that are equivalent.
</ul>
Of course, the meaning of <i>equivalent</i> is inheritently domain specific.
Object-oriented languages allow the programmer to control the meaning
of the equality test by allowing the redefinition of a standard method.
(for example, <b>equals</b> in Java).
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 12</a>, Slide 17</h6>
<hr>
</body>
</html>
