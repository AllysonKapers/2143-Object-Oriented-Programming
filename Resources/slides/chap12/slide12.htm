<html>
<head><title>Chapter 12, Slide 12</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 12: Implications of substitution:
<td bgcolor=#FCCF97><a href="slide13.htm">next</a>
<td bgcolor=#FCCF97><a href="slide11.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide12.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap12/slide12.ram">real</a>
<td bgcolor=#FCCF97><a href="text12.htm" target=text>text</a>
</table>
<p>
<h1>Dynamic Memory Allocation</h1>
<font size=+2>
<P><UL>
<LI>
In the third approach, all objects are actually pointers.
<p>
<LI>
Only enough space for a pointer is allocated at compile time.
<p>
<LI>
Actual data storage is allocated on the heap at run-time.
<p>
<LI>
Used in Smalltalk, Object Pascal, and Objective-C, Java.
<p>
<LI>
Requires user to explicitly allocate new objects and, in some languages,
explicitly free no longer used storage.
<p>
<LI>
May also lead to pointer semantics for assignment and equality testing.
</UL>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 12</a>, Slide 12</h6>
<hr>
</body>
</html>
