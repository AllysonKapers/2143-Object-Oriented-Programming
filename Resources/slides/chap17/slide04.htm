<html>
<head><title>Chapter 17, Slide 04</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 17: The Polymorphic Variable :
<td bgcolor=#FCCF97><a href="slide05.htm">next</a>
<td bgcolor=#FCCF97><a href="slide03.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide04.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap17/slide04.ram">real</a>
<td bgcolor=#FCCF97><a href="text04.htm" target=text>text</a>
</table>
<p>
<h1>The Receiver Variable in Frameworks</h1>
<font size=+2>
The greatest power of the receiver variable comes in the 
development of software frameworks.
<p>
In a framework, some methods are implemented in the parent class and not
overridden (called foundation method), others are defined in the 
parent class, but intended to be overridden (called deferred method).
<p>
Consider a class <b>Window</b> with subclasses <b>TextWindow</b> and
<b>GraphicsWindow</b>.
<p>
The combination of foundation and deferred methods allow high level
algorithms to be reused and specialized in new situations.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 17</a>, Slide 04</h6>
<hr>
</body>
</html>
