<html>
<head><title>Chapter 27, Slide 09</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 27: Implementation :
<td bgcolor=#FCCF97><a href="slide10.htm">next</a>
<td bgcolor=#FCCF97><a href="slide08.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide09.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap27/slide09.ram">real</a>
<td bgcolor=#FCCF97><a href="text09.htm" target=text>text</a>
</table>
<p>
<h1>Slicing Problem</h1>
<font size=+2>
The idea that a child can extend the data area of the parent also makes
it difficult to support both the following goals
<ol>
<li>The goal of keeping memory on the stack, which is laid out at compile time
<p><li>The goal of supporting the polymorphic variable, which can hold
an instance of the child class at run time.
</ol>
<p>
Most OO languages uphold (2) and abandon (1), C++ is an exception in
that it upholds (1) and therefore abandons (2).
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 27</a>, Slide 09</h6>
<hr>
</body>
</html>
