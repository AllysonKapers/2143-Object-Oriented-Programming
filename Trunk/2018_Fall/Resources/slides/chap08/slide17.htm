<html>
<head><title>Chapter 8, Slide 17</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 8: Inheritance and Substitution:
<td bgcolor=#FCCF97><a href="slide18.htm">next</a>
<td bgcolor=#FCCF97><a href="slide16.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide17.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap08/slide17.ram">real</a>
<td bgcolor=#FCCF97><a href="text17.htm" target=text>text</a>
</table>
<p>
<h1>Specification Inheritance</h1>
<font size=+2>
If the parent class is abstract, we often say that it is providing
a specification for the child class, and therefore it is specification
inheritance (a variety of specialization inheritance).
<p>
Example: Java Event Listeners
<p>
ActionListener, MouseListener, and so on specify behavior, but must be
subclassed.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 8</a>, Slide 17</h6>
<hr>
</body>
</html>
