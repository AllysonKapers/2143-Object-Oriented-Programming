<html>
<head>
<title>Text for slide38, Chapter 2 talk</title>
</head>
<body>
<h1> Step - Implement and Test Subsystems</h1>
<p>
Not everything was rejected in the revolution that overthrew previous
software development techniques and replaced them with object-oriented
tools.  It is at this point, in developing the internal behavior
of a component, that classic techniques, such as <i>stepwise refinement</i>,
show their great power and utility.
<p>
If components have been developed with an eye on minimizing
coupling, then they can be developed and validated in relative
isolation.  Techniques such as informal proofs of correctness and
software testing can be used as confidence building measures.
Preconditions necessary for correct behavior can be identified.
These can then to forwarded to the developers of the systems
that use the current abstraction, in order to verify that the
conditions are being met.
<p>
<h6><a href="slide38.au">[audio] 38</a>
<a href="http://www.cs.orst.edu/~cs582/real/chap02/slide38.ram">[real] 38</a>
 Text to accompany <a href="slide38.htm">slide 38</a>,
in <a href="slide1.htm">Chapter 2</a> of <a href="ftp://ftp.cs.orst.edu/pub/budd/oopintro/2ndEdition/">An Introduction to Object-Oriented Programming</a></h6>
</body>
</html>
