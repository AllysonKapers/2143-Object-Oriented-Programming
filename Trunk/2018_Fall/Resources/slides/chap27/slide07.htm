<html>
<head><title>Chapter 27, Slide 07</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 27: Implementation :
<td bgcolor=#FCCF97><a href="slide08.htm">next</a>
<td bgcolor=#FCCF97><a href="slide06.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide07.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap27/slide07.ram">real</a>
<td bgcolor=#FCCF97><a href="text07.htm" target=text>text</a>
</table>
<p>
<h1>Inherited Methods</h1>
<font size=+2>
Now consider those methods defined in a parent class, but used by a child class.
<p>
How is it that this mechanism can work?  Normally you cannot change the
types of arguments (recall that the receiver is just an argument).
<p>
Solution is that the data associated with an instance of a child class is 
an <i>extension</i> of the data associated with the parent class.
<p>
This means that data fields in the parent class will be found at the
<i>same offset</i> in the child class.
<p>
<img src="slide07.png">
<br>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 27</a>, Slide 07</h6>
<hr>
</body>
</html>
