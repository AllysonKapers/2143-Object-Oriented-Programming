<html>
<head>
<title>Text for slides, Chapter 2 talk</title>
</head>
<body>
<h1>Has-a Abstraction</h1>
<p>
The most common type of abstraction is a division into parts.
This takes a complex system, and separates it into component parts, which
can then be considered in isolation.
<p>
This type of abstraction gets its name from a rule of thumb that can be
used to identify when it is appropriate.   The idea is to form 
an English sentence using the words ``has-a''.  Examples are
a car has an engine, and has a transmissin,  a bicycle has a wheel.
A window has a menu bar.  When the senences sound right to your inner
ear, you know you have an appropriate use of this form of
abstraction.
<p>
Once identified, the has-a abstraction helps us decide how to break
a system into smaller units, and then allows us to drop down
a level of complexity when we consider each of the smaller components
in isolation.
<p>
<h6><a href="slide15.au">[audio]</a>
<a href="http://www.cs.orst.edu/~cs582/real/chap02/slide15.ram">[real]</a>
 Text to accompany <a href="slide15.htm">slide15</a>,
in <a href="outline.htm">Chapter 2</a> of <a href="ftp://ftp.cs.orst.edu/pub/budd/oopintro/">An Introduction to Object-Oriented Programming</a></h6>
</body>
</html>
