<html>
<head><title>Chapter 13, Slide 12</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 13: Multiple Inheritance:
<td bgcolor=#FCCF97><a href="slide13.htm">next</a>
<td bgcolor=#FCCF97><a href="slide11.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide12.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap13/slide12.ram">real</a>
<td bgcolor=#FCCF97><a href="text12.htm" target=text>text</a>
</table>
<p>
<h1>Multiple Inheritance of Interfaces</h1>
<font size=+2>
Multiple inheritance of interfaces does not present the same problem
of name ambiguity as does multiple inheritance of classes.
<ul>
<li>Either the ambiguous methods in the parent classes have different
type signatures, in which case there is no problem, or
<p><li>The ambiguous methods in the parent classes have the same signature.
Still no problem, since what is inherited is only a specification,
not an implementation.
</ul>
This is why Java permits multiple inheritance of interfaces, not of
classes.
</font>
<p>
Nevertheless, C# does not permit the same method name to be inherited
from two parent interfaces.
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 13</a>, Slide 12</h6>
<hr>
</body>
</html>
