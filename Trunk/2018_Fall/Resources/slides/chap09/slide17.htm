<html>
<head><title>Chapter 9, Slide 17</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 9: A Solitare Game:
<td bgcolor=#FCCF97><a href="slide18.htm">next</a>
<td bgcolor=#FCCF97><a href="slide16.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide17.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap09/slide17.ram">real</a>
<td bgcolor=#FCCF97><a href="text17.htm" target=text>text</a>
</table>
<p>
<h1>The Main Program</h1>
<font size=+2>
Details of the user interface are isolated in the main program.
Much of this is automatically generated by the IDE.
<pre>
public class Solitaire : System.WinForms.Form {
		// start of automatically generated code
        private System.ComponentModel.Container components;

        public Solitaire() { 
            InitializeComponent();
        }

        public override void Dispose() { 
            base.Dispose();
            components.Dispose();
        }

        private void InitializeComponent() { 
		this.components = new System.ComponentModel.Container ();
		this.Text = "Solitaire";
		this.AutoScaleBaseSize = new System.Drawing.Size (5, 13);
		this.ClientSize = new System.Drawing.Size (392, 373);
	}
		// end of automatically generated code

	protected override void OnMouseDown (MouseEventArgs e ) { 
		Game.mouseDown(e.X, e.Y); 
		this.Invalidate(); // force screen redraw
		}
		
	protected override void OnPaint (PaintEventArgs pe ) {
		Graphics g = pe.Graphics;
		CardView cv = new WinFormsCardView(g);
		Game.paint(cv);
	}

	public static void Main(string[] args) 
		{ Application.Run(new Solitaire()); }
}
</pre>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 9</a>, Slide 17</h6>
<hr>
</body>
</html>
