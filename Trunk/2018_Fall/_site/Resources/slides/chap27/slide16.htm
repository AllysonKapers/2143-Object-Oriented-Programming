<html>
<head><title>Chapter 27, Slide 16</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 27: Implementation :
<td bgcolor=#FCCF97><a href="slide17.htm">next</a>
<td bgcolor=#FCCF97><a href="slide15.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide16.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap27/slide16.ram">real</a>
<td bgcolor=#FCCF97><a href="text16.htm" target=text>text</a>
</table>
<p>
<h1>Elimination of Virtual Calls</h1>
<font size=+2>
Even though the overhead of a virtual call is small, it can still add up.
<p>
If the (dynamic) class of the receiver is know, a virtual call can simply
become an ordinary procedure call
<p>
Good optimizing compilers spend a considerable amount of time tracing possible
execution flows to gather this information.
<p>
Sometimes methods can even be expanded in-line at the point of call.
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 27</a>, Slide 16</h6>
<hr>
</body>
</html>
