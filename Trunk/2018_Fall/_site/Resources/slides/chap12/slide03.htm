<html>
<head><title>Chapter 12, Slide 03</title></head>
<body BGCOLOR=#FCEADT>
<table border=0>
<tr><td>Introduction to OOP
<td>Chapter 12: Implications of substitution:
<td bgcolor=#FCCF97><a href="slide04.htm">next</a>
<td bgcolor=#FCCF97><a href="slide02.htm">previous</a>
<td bgcolor=#FCCF97><a href="slide03.au">audio</a>
<td bgcolor=#FCCF97><a href="http://www.cs.orst.edu/~cs582/real/chap12/slide03.ram">real</a>
<td bgcolor=#FCCF97><a href="text03.htm" target=text>text</a>
</table>
<p>
<h1>Memory Allocation - Stack and Heap Based</h1>
<font size=+2>
<P>
Generally, programming languages use two different techniques for allocation
of memory.
<P><UL>
<LI>
<B>Stack</B>-based allocation.  Amount of space required is determined at
compile time, based on static types of variables.  
Memory allocation and release is tied to procedure entry/exit.
Can be performed very efficiently.
<p>
<LI>
<B>Heap</B>-based allocation.  Amount of space used can be determined at
run-time, based upon dynamic considerations.
Memory allocation and release is not tied to procedure entry/exit,
and either must be handled by user or by a run-time library (garbage 
collection).  Generally considered to be somewhat less efficient.
</UL>
</font>
<h6 ALIGN=right>Intro OOP, <a href="outline.htm">Chapter 12</a>, Slide 03</h6>
<hr>
</body>
</html>
